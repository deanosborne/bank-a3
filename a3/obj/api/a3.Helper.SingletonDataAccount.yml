### YamlMime:ManagedReference
items:
- uid: a3.Helper.SingletonDataAccount
  commentId: T:a3.Helper.SingletonDataAccount
  id: SingletonDataAccount
  parent: a3.Helper
  children:
  - a3.Helper.SingletonDataAccount.getInstance
  - a3.Helper.SingletonDataAccount.NextId
  - a3.Helper.SingletonDataAccount.setInstance(a3.Helper.SingletonDataAccount)
  langs:
  - csharp
  - vb
  name: SingletonDataAccount
  nameWithType: SingletonDataAccount
  fullName: a3.Helper.SingletonDataAccount
  type: Class
  source:
    id: SingletonDataAccount
    path: C:\Users\imdea\source\repos\bank-ass3\a3\Helper\SingletonDataAccount.cs
    startLine: 8
  assemblies:
  - a3
  namespace: a3.Helper
  syntax:
    content: >-
      [Serializable]

      public class SingletonDataAccount
    content.vb: >-
      <Serializable>

      Public Class SingletonDataAccount
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  attributes:
  - type: System.SerializableAttribute
    ctor: System.SerializableAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: a3.Helper.SingletonDataAccount.NextId
  commentId: P:a3.Helper.SingletonDataAccount.NextId
  id: NextId
  parent: a3.Helper.SingletonDataAccount
  langs:
  - csharp
  - vb
  name: NextId
  nameWithType: SingletonDataAccount.NextId
  fullName: a3.Helper.SingletonDataAccount.NextId
  type: Property
  source:
    id: NextId
    path: C:\Users\imdea\source\repos\bank-ass3\a3\Helper\SingletonDataAccount.cs
    startLine: 14
  assemblies:
  - a3
  namespace: a3.Helper
  syntax:
    content: public static int NextId { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Shared ReadOnly Property NextId As Integer
  overload: a3.Helper.SingletonDataAccount.NextId*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: a3.Helper.SingletonDataAccount.getInstance
  commentId: M:a3.Helper.SingletonDataAccount.getInstance
  id: getInstance
  parent: a3.Helper.SingletonDataAccount
  langs:
  - csharp
  - vb
  name: getInstance()
  nameWithType: SingletonDataAccount.getInstance()
  fullName: a3.Helper.SingletonDataAccount.getInstance()
  type: Method
  source:
    id: getInstance
    path: C:\Users\imdea\source\repos\bank-ass3\a3\Helper\SingletonDataAccount.cs
    startLine: 23
  assemblies:
  - a3
  namespace: a3.Helper
  syntax:
    content: public static SingletonDataAccount getInstance()
    return:
      type: a3.Helper.SingletonDataAccount
    content.vb: Public Shared Function getInstance As SingletonDataAccount
  overload: a3.Helper.SingletonDataAccount.getInstance*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: a3.Helper.SingletonDataAccount.setInstance(a3.Helper.SingletonDataAccount)
  commentId: M:a3.Helper.SingletonDataAccount.setInstance(a3.Helper.SingletonDataAccount)
  id: setInstance(a3.Helper.SingletonDataAccount)
  parent: a3.Helper.SingletonDataAccount
  langs:
  - csharp
  - vb
  name: setInstance(SingletonDataAccount)
  nameWithType: SingletonDataAccount.setInstance(SingletonDataAccount)
  fullName: a3.Helper.SingletonDataAccount.setInstance(a3.Helper.SingletonDataAccount)
  type: Method
  source:
    id: setInstance
    path: C:\Users\imdea\source\repos\bank-ass3\a3\Helper\SingletonDataAccount.cs
    startLine: 33
  assemblies:
  - a3
  namespace: a3.Helper
  syntax:
    content: public static void setInstance(SingletonDataAccount s)
    parameters:
    - id: s
      type: a3.Helper.SingletonDataAccount
    content.vb: Public Shared Sub setInstance(s As SingletonDataAccount)
  overload: a3.Helper.SingletonDataAccount.setInstance*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: a3.Helper
  commentId: N:a3.Helper
  name: a3.Helper
  nameWithType: a3.Helper
  fullName: a3.Helper
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: a3.Helper.SingletonDataAccount.NextId*
  commentId: Overload:a3.Helper.SingletonDataAccount.NextId
  name: NextId
  nameWithType: SingletonDataAccount.NextId
  fullName: a3.Helper.SingletonDataAccount.NextId
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: a3.Helper.SingletonDataAccount.getInstance*
  commentId: Overload:a3.Helper.SingletonDataAccount.getInstance
  name: getInstance
  nameWithType: SingletonDataAccount.getInstance
  fullName: a3.Helper.SingletonDataAccount.getInstance
- uid: a3.Helper.SingletonDataAccount
  commentId: T:a3.Helper.SingletonDataAccount
  parent: a3.Helper
  name: SingletonDataAccount
  nameWithType: SingletonDataAccount
  fullName: a3.Helper.SingletonDataAccount
- uid: a3.Helper.SingletonDataAccount.setInstance*
  commentId: Overload:a3.Helper.SingletonDataAccount.setInstance
  name: setInstance
  nameWithType: SingletonDataAccount.setInstance
  fullName: a3.Helper.SingletonDataAccount.setInstance
