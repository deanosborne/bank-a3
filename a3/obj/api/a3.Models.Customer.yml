### YamlMime:ManagedReference
items:
- uid: a3.Models.Customer
  commentId: T:a3.Models.Customer
  id: Customer
  parent: a3.Models
  children:
  - a3.Models.Customer.#ctor
  - a3.Models.Customer.#ctor(System.String,System.String,System.Int32,System.Boolean)
  - a3.Models.Customer.Email
  - a3.Models.Customer.Id
  - a3.Models.Customer.Name
  - a3.Models.Customer.Phone
  - a3.Models.Customer.Staff
  langs:
  - csharp
  - vb
  name: Customer
  nameWithType: Customer
  fullName: a3.Models.Customer
  type: Class
  source:
    id: Customer
    path: C:\Users\imdea\source\repos\bank-ass3\a3\Models\Customer.cs
    startLine: 10
  assemblies:
  - a3
  namespace: a3.Models
  syntax:
    content: >-
      [Serializable]

      public class Customer
    content.vb: >-
      <Serializable>

      Public Class Customer
  inheritance:
  - System.Object
  derivedClasses:
  - a3.Models.Staff
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  attributes:
  - type: System.SerializableAttribute
    ctor: System.SerializableAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: a3.Models.Customer.#ctor
  commentId: M:a3.Models.Customer.#ctor
  id: '#ctor'
  parent: a3.Models.Customer
  langs:
  - csharp
  - vb
  name: Customer()
  nameWithType: Customer.Customer()
  fullName: a3.Models.Customer.Customer()
  type: Constructor
  source:
    id: .ctor
    path: C:\Users\imdea\source\repos\bank-ass3\a3\Models\Customer.cs
    startLine: 20
  assemblies:
  - a3
  namespace: a3.Models
  syntax:
    content: public Customer()
    content.vb: Public Sub New
  overload: a3.Models.Customer.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: a3.Models.Customer.#ctor(System.String,System.String,System.Int32,System.Boolean)
  commentId: M:a3.Models.Customer.#ctor(System.String,System.String,System.Int32,System.Boolean)
  id: '#ctor(System.String,System.String,System.Int32,System.Boolean)'
  parent: a3.Models.Customer
  langs:
  - csharp
  - vb
  name: Customer(String, String, Int32, Boolean)
  nameWithType: Customer.Customer(String, String, Int32, Boolean)
  fullName: a3.Models.Customer.Customer(System.String, System.String, System.Int32, System.Boolean)
  type: Constructor
  source:
    id: .ctor
    path: C:\Users\imdea\source\repos\bank-ass3\a3\Models\Customer.cs
    startLine: 22
  assemblies:
  - a3
  namespace: a3.Models
  syntax:
    content: public Customer(string name, string email, int phone, bool staff)
    parameters:
    - id: name
      type: System.String
    - id: email
      type: System.String
    - id: phone
      type: System.Int32
    - id: staff
      type: System.Boolean
    content.vb: Public Sub New(name As String, email As String, phone As Integer, staff As Boolean)
  overload: a3.Models.Customer.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: a3.Models.Customer.Id
  commentId: P:a3.Models.Customer.Id
  id: Id
  parent: a3.Models.Customer
  langs:
  - csharp
  - vb
  name: Id
  nameWithType: Customer.Id
  fullName: a3.Models.Customer.Id
  type: Property
  source:
    id: Id
    path: C:\Users\imdea\source\repos\bank-ass3\a3\Models\Customer.cs
    startLine: 32
  assemblies:
  - a3
  namespace: a3.Models
  syntax:
    content: public int Id { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property Id As Integer
  overload: a3.Models.Customer.Id*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: a3.Models.Customer.Name
  commentId: P:a3.Models.Customer.Name
  id: Name
  parent: a3.Models.Customer
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: Customer.Name
  fullName: a3.Models.Customer.Name
  type: Property
  source:
    id: Name
    path: C:\Users\imdea\source\repos\bank-ass3\a3\Models\Customer.cs
    startLine: 38
  assemblies:
  - a3
  namespace: a3.Models
  syntax:
    content: public string Name { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Name As String
  overload: a3.Models.Customer.Name*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: a3.Models.Customer.Phone
  commentId: P:a3.Models.Customer.Phone
  id: Phone
  parent: a3.Models.Customer
  langs:
  - csharp
  - vb
  name: Phone
  nameWithType: Customer.Phone
  fullName: a3.Models.Customer.Phone
  type: Property
  source:
    id: Phone
    path: C:\Users\imdea\source\repos\bank-ass3\a3\Models\Customer.cs
    startLine: 44
  assemblies:
  - a3
  namespace: a3.Models
  syntax:
    content: public int Phone { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property Phone As Integer
  overload: a3.Models.Customer.Phone*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: a3.Models.Customer.Staff
  commentId: P:a3.Models.Customer.Staff
  id: Staff
  parent: a3.Models.Customer
  langs:
  - csharp
  - vb
  name: Staff
  nameWithType: Customer.Staff
  fullName: a3.Models.Customer.Staff
  type: Property
  source:
    id: Staff
    path: C:\Users\imdea\source\repos\bank-ass3\a3\Models\Customer.cs
    startLine: 49
  assemblies:
  - a3
  namespace: a3.Models
  syntax:
    content: public bool Staff { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property Staff As Boolean
  overload: a3.Models.Customer.Staff*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: a3.Models.Customer.Email
  commentId: P:a3.Models.Customer.Email
  id: Email
  parent: a3.Models.Customer
  langs:
  - csharp
  - vb
  name: Email
  nameWithType: Customer.Email
  fullName: a3.Models.Customer.Email
  type: Property
  source:
    id: Email
    path: C:\Users\imdea\source\repos\bank-ass3\a3\Models\Customer.cs
    startLine: 55
  assemblies:
  - a3
  namespace: a3.Models
  syntax:
    content: public string Email { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Email As String
  overload: a3.Models.Customer.Email*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: a3.Models
  commentId: N:a3.Models
  name: a3.Models
  nameWithType: a3.Models
  fullName: a3.Models
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: a3.Models.Customer.#ctor*
  commentId: Overload:a3.Models.Customer.#ctor
  name: Customer
  nameWithType: Customer.Customer
  fullName: a3.Models.Customer.Customer
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: a3.Models.Customer.Id*
  commentId: Overload:a3.Models.Customer.Id
  name: Id
  nameWithType: Customer.Id
  fullName: a3.Models.Customer.Id
- uid: a3.Models.Customer.Name*
  commentId: Overload:a3.Models.Customer.Name
  name: Name
  nameWithType: Customer.Name
  fullName: a3.Models.Customer.Name
- uid: a3.Models.Customer.Phone*
  commentId: Overload:a3.Models.Customer.Phone
  name: Phone
  nameWithType: Customer.Phone
  fullName: a3.Models.Customer.Phone
- uid: a3.Models.Customer.Staff*
  commentId: Overload:a3.Models.Customer.Staff
  name: Staff
  nameWithType: Customer.Staff
  fullName: a3.Models.Customer.Staff
- uid: a3.Models.Customer.Email*
  commentId: Overload:a3.Models.Customer.Email
  name: Email
  nameWithType: Customer.Email
  fullName: a3.Models.Customer.Email
